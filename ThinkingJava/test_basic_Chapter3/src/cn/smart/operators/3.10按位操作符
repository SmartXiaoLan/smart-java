按位操作符
    是用来操作整数基本数据类型中的单个"比特"(bit),即二进制。会对两个参数中对应的位执行布尔代数运算，并最终生成一个结果。

    这种运算符更多的用来直接操作硬件。Java最初是为了嵌入式电视机顶盒内。所以这种面向底层的操作被保留了下来，但很少使用。

    使用方法及规则:
        如果两个输入位都是1则:
              操作                输出             否则
            与操作&:               1                0
        如果两个输入位只要有一个是1则:
              操作                输出             否则
            或操作|:               1                0(当两个都为0时)
        如果输入位的某一个是1,但不全都是1则:
              操作                输出
            异或操作^:             1
        按位非操作~,也称为取反操作,属于一元运算符，只对一个操作数操作(其他按位为二元操作符):
            生成与输入位相反的结果。如果输入为1-->输出则为0;如果输入为0-->输出则为1.

    按位操作符可与=联合，以便合并运算和赋值:&=、|=、^=。由于~是一元操作符，所以不可与=联合使用。